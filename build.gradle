import java.util.stream.Collectors

plugins {
    id "architectury-plugin" version "3.0.78"
    id "forgified-fabric-loom" version "0.6.67" apply false
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "forgified-fabric-loom"

    def fcMixinConfigs = [
            "predicates",
            "fastmap",
            "mrl",
            "dedupmultipart",
            "blockstatecache",
            "dedupbakedquad",
        ].stream()
        .map({s -> rootProject.archives_base_name+"."+s+".mixin.json"})
        .collect(Collectors.toList())
    loom {
        silentMojangMappingsLicense()
        mixinConfigs += fcMixinConfigs
    }

    task signJar(description: "Sign jar") {
        doLast {
            if (project.hasProperty('keyStore')) {
                def path = remapJar.archivePath
                logger.info("Signing " + path + "\n")
                ant.signjar(jar: path,
                        alias: project.storeAlias,
                        keystore: project.keyStore,
                        storepass: project.storePass,
                        keypass: project.storePass
                )
            } else {
                logger.warn("No key store found, not signing the output jar\n")
            }
        }
    }
    build.dependsOn signJar
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"

    archivesBaseName = rootProject.archives_base_name
    version = rootProject.mod_version
    group = rootProject.maven_group

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"

        if (JavaVersion.current().isJava9Compatible()) {
            options.release = 8
        }
    }

    java {
        withSourcesJar()
    }
}
