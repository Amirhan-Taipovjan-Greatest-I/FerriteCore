import java.util.stream.Collectors

plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "0.10.0-SNAPSHOT" apply false
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()
    }

    task signJar(description: "Sign jar") {
        doLast {
            if (project.hasProperty('keyStore')) {
                def path = remapJar.archivePath
                logger.info("Signing " + path + "\n")
                ant.signjar(jar: path,
                        alias: project.storeAlias,
                        keystore: project.keyStore,
                        storepass: project.storePass,
                        keypass: project.storePass
                )
            } else {
                logger.warn("No key store found, not signing the output jar\n")
            }
        }
    }
    build.dependsOn signJar

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        mappings minecraft.officialMojangMappings()
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"

    archivesBaseName = rootProject.archives_base_name
    version = rootProject.mod_version
    group = rootProject.maven_group

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 16
    }

    java {
        withSourcesJar()
    }

    def customGradle = project.file('custom.gradle');
    if (customGradle.exists()) {
        apply from: customGradle;
    }
}
